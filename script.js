document.addEventListener("DOMContentLoaded", () => {
    if (window.Telegram && Telegram.WebApp) {
        Telegram.WebApp.expand();
    }

    // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
    const startBtn = document.getElementById("start-btn");
    const restartBtn = document.getElementById("restart-btn");
    const signalInfo = document.getElementById("signal-info");
    const waitingText = document.getElementById("waiting-text");
    const soonText = document.getElementById("soon-text");
    const signalImage = document.getElementById("signal-image");
    const signalText = document.getElementById("signal-text");

    if (!startBtn || !restartBtn || !signalInfo) {
        console.error("Error: One or more elements are missing in the HTML.");
        return;
    }

    // –°–∫—Ä—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏
    setTimeout(() => {
        document.getElementById("loading-screen").style.display = "none";
        document.getElementById("main-content").classList.remove("hidden");
    }, 2500);

    // –í–∞–ª—é—Ç–Ω—ã–µ –ø–∞—Ä—ã
    const currencyPairs = [
        "EUR/USD", "USD/JPY", "GBP/USD", "USD/CHF", "AUD/USD", "USD/CAD",
        "NZD/USD", "EUR/GBP", "EUR/JPY", "GBP/JPY", "AUD/JPY", "CHF/JPY",
        "Cardano OTC", "Bitcoin ETF OTC", "Bitcoin OTC", "Polkadot OTC", "Solana OTC",
        "Toncoin OTC", "Litecoin OTC", "Ethereum OTC", "TRON OTC", "Polygon OTC", "Avalanche OTC",
        "Dogecoin OTC", "Chainlink OTC", "Brent Oil OTC", "WTI Crude Oil OTC", "Silver OTC",
        "Gold OTC", "Natural Gas OTC", "Palladium spot OTC", "Platinum spot OTC"
    ];

    const expirationTimes = ["5 sec", "15 sec", "1 min", "2 min", "3 min", "5 min", "15 min", "30 min"];

    let selectedPair = "";
    let selectedTime = "";

    const currencyList = document.getElementById("currency-list");
    const expirationList = document.getElementById("expiration-list");

    // –ó–∞–ø–æ–ª–Ω—è–µ–º –≤–∞–ª—é—Ç–Ω—ã–µ –ø–∞—Ä—ã
    currencyPairs.forEach(pair => {
        const btn = document.createElement("button");
        btn.textContent = pair;
        btn.onclick = () => selectCurrency(pair);
        currencyList.appendChild(btn);
    });

    // –í—ã–±–æ—Ä –≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä—ã
    function selectCurrency(pair) {
        selectedPair = pair;
        currencyList.innerHTML = "";
        document.getElementById("pair-title").textContent = `‚úÖ Selected: ${selectedPair}`;
        expirationList.classList.remove("hidden");

        expirationList.innerHTML = "";
        expirationTimes.forEach(time => {
            const btn = document.createElement("button");
            btn.textContent = time;
            btn.onclick = () => selectTime(time);
            expirationList.appendChild(btn);
        });
    }

    // –í—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏
    function selectTime(time) {
        selectedTime = time;
        expirationList.innerHTML = "";
        document.getElementById("time-title").textContent = `‚úÖ Selected: ${selectedTime}`;
        startBtn.classList.remove("hidden");
    }

    // –ó–∞–ø—É—Å–∫ –ø–æ–∏—Å–∫–∞ —Å–∏–≥–Ω–∞–ª–∞
    startBtn.addEventListener("click", () => {
        startBtn.classList.add("hidden");
        signalInfo.classList.remove("hidden");
        restartBtn.classList.add("hidden");

        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ä—ã–π —Å–∏–≥–Ω–∞–ª –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –ø–æ–∏—Å–∫–∞
        signalImage.classList.add("hidden");
        signalText.classList.add("hidden");
        signalText.innerHTML = "";
        signalImage.src = ""; // –û—á–∏—â–∞–µ–º –ø—É—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

        waitingText.classList.remove("hidden");

        setTimeout(() => {
            waitingText.classList.add("hidden");
            soonText.classList.remove("hidden");
        }, 5000);

        setTimeout(() => {
            const direction = Math.random() > 0.5 ? "up" : "down";
            const directionText = direction === "up" ? "üìà FOR PROMOTION" : "üìâ ON A DOWNGRADE";
            const photoPath = `photos/${direction}.jpg`;

            soonText.classList.add("hidden");

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ç–æ —Å–∏–≥–Ω–∞–ª–∞ –∏ —Ç–µ–∫—Å—Ç
            signalImage.src = photoPath;
            signalImage.classList.remove("hidden");

            signalText.innerHTML = `
                üíπ Trading pair: <b>${selectedPair}</b><br>
                ‚åõ Trade time: <b>${selectedTime}</b><br><br>
                ‚ö° The bot recommends opening a trade:<br>
                <b>${directionText}</b><br>
                <b>Open the trade immediately‚ùó</b>
            `;
            signalText.classList.remove("hidden");

            restartBtn.classList.remove("hidden");
        }, 8000);
    });

    // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ (–≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –≤—ã–±–æ—Ä—É –≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä—ã –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å—ë)
    restartBtn.addEventListener("click", () => {
        signalInfo.classList.add("hidden");
        restartBtn.classList.add("hidden");

        selectedPair = "";
        selectedTime = "";

        document.getElementById("pair-title").textContent = "üìä Select a currency pair";
        document.getElementById("time-title").textContent = "";

        currencyList.innerHTML = "";
        expirationList.innerHTML = "";
        expirationList.classList.add("hidden");

        waitingText.classList.add("hidden");
        soonText.classList.add("hidden");
        signalImage.classList.add("hidden");
        signalText.classList.add("hidden");

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç–Ω—ã—Ö –ø–∞—Ä
        currencyPairs.forEach(pair => {
            const btn = document.createElement("button");
            btn.textContent = pair;
            btn.onclick = () => selectCurrency(pair);
            currencyList.appendChild(btn);
        });
    });
});


